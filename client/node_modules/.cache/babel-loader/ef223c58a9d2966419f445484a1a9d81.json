{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\MinecraftTrades\\\\client\\\\src\\\\components\\\\UpdateTrader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateTrader = props => {\n  _s();\n\n  const {\n    traderName,\n    setTraderName\n  } = props;\n  const [name, setName] = useState(\"\");\n  const [want, setWant] = useState(\"\");\n  const [give, setGive] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/traders/' + traderName._id).then(res => {\n      console.log(res);\n      console.log(res.data);\n      console.log(\"-------------\");\n      console.log(res.data.data);\n      console.log(\"-------------\");\n      setName(res.data.name);\n      setWant(res.data.want);\n      setGive(res.data.give);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const updateTrader = e => {\n    e.preventDefault();\n    console.log(traderName._id);\n    axios.put('http://localhost:8000/api/traders/edit/' + traderName._id, {\n      name,\n      want,\n      give\n    }).then(res => {\n      console.log(res); // navigate(\"/\"); \n    }) // .catch(err => console.log(err))\n    .catch(err => {\n      console.log(\"===\");\n      console.log(err.response.data.errors);\n      setErrors(err.response.data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update a trader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateTrader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), errors.name ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this) : null // nameError?\n        // <p>{nameError}</p>\n        // : ''\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Wants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"want\",\n          value: want,\n          onChange: e => {\n            setWant(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), errors.want ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.want.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this) : null // wantError?\n        // <p>{wantError}</p>\n        // : ''\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"give\",\n          value: give,\n          onChange: e => {\n            setGive(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), errors.give ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.give.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this) : null // giveError?\n        // <p>{giveError}</p>\n        // : ''\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateTrader, \"G1pWnWc4FQbICqEgc3l2DK4lNCM=\");\n\n_c = UpdateTrader;\nexport default UpdateTrader;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTrader\");","map":{"version":3,"sources":["E:/github/MinecraftTrades/client/src/components/UpdateTrader.js"],"names":["React","useEffect","useState","axios","useNavigate","useParams","UpdateTrader","props","traderName","setTraderName","name","setName","want","setWant","give","setGive","errors","setErrors","get","_id","then","res","console","log","data","catch","err","updateTrader","e","preventDefault","put","response","target","value","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useParams} from 'react-router-dom';\r\nconst UpdateTrader = (props) => {\r\n    const { traderName, setTraderName } = props;\r\n    const [name, setName] = useState(\"\");\r\n    const [want, setWant] = useState(\"\");\r\n    const [give, setGive] = useState(\"\");\r\n    const [errors, setErrors] = useState({}); \r\n    \r\n    useEffect(() =>{\r\n        axios.get('http://localhost:8000/api/traders/' + traderName._id)\r\n        .then((res)=>{\r\n            console.log(res);\r\n            console.log(res.data);\r\n            console.log(\"-------------\");\r\n            console.log(res.data.data);\r\n            console.log(\"-------------\");\r\n            setName(res.data.name);\r\n            setWant(res.data.want);\r\n            setGive(res.data.give);\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    },[])\r\n    const updateTrader = (e) => {\r\n        e.preventDefault();\r\n        console.log(traderName._id);\r\n        axios.put('http://localhost:8000/api/traders/edit/' + traderName._id, {\r\n            name,\r\n            want,\r\n            give,\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                // navigate(\"/\"); \r\n            })\r\n            // .catch(err => console.log(err))\r\n            .catch(err =>{\r\n                console.log(\"===\");\r\n                console.log(err.response.data.errors);\r\n                setErrors(err.response.data.errors);\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Update a trader</h1>\r\n            <form onSubmit={updateTrader}>\r\n            {/* {errors.map((err,index) => <p key={index}>{err} </p>)} */}\r\n                <p>\r\n                    <label>Name</label><br />\r\n                    <input type=\"text\" \r\n                    name=\"name\" \r\n                    value={name} \r\n                    onChange={(e) => { setName(e.target.value) }} />\r\n                    {\r\n                    errors.name ?\r\n                    <p>{errors.name.message}</p>\r\n                    : null\r\n                    // nameError?\r\n                    // <p>{nameError}</p>\r\n                    // : ''\r\n                }\r\n                </p>\r\n                <p>\r\n                    <label>Wants</label><br />\r\n                    <input type=\"number\" \r\n                    name=\"want\"\r\n                    value={want} \r\n                    onChange={(e) => { setWant(e.target.value) }} />\r\n                    {\r\n                    errors.want ?\r\n                    <p>{errors.want.message}</p>\r\n                    : null\r\n                    // wantError?\r\n                    // <p>{wantError}</p>\r\n                    // : ''\r\n                }\r\n                </p>\r\n                <p>\r\n                    <label>Gives</label><br />\r\n                    <input type=\"text\" \r\n                    name=\"give\"\r\n                    value={give} \r\n                    onChange={(e) => { setGive(e.target.value) }} />\r\n                    {\r\n                    errors.give ?\r\n                    <p>{errors.give.message}</p>\r\n                    : null\r\n                    // giveError?\r\n                    // <p>{giveError}</p>\r\n                    // : ''\r\n                }\r\n                </p>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateTrader;\r\n"]},"metadata":{},"sourceType":"module"}
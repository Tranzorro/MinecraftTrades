{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\MinecraftTrades\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport TraderTable from \"./components/TraderTable\";\nimport HomePage from \"./components/HomePage\"; // import TableInput from \"./components/TableData\";\n\nimport TraderForm from './components/TraderForm'; // import DisplayOneTrader from './components/DisplayOneTrader';\n\nimport UpdateTrader from './components/UpdateTrader'; //  tableInput was to insert existing data to trader db for simpler calling and editing later.\n// table input is not used as main app functions.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [traderName, setTraderName] = useState(); // const [theTraderId, setTheTraderId] = useState();\n\n  console.log(\"app.js logging traderName State. value is...\");\n  console.log(traderName);\n\n  const removeFromDom = traderId => {\n    setTraderName(traderName.filter(trader => trader._id != traderId));\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/traders/getAll').then(res => {\n      // console.log(res);\n      console.log(res.data);\n      setTraderName(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            traderName: traderName,\n            setTraderName: setTraderName,\n            nav: /*#__PURE__*/_jsxDEV(NavBar, {\n              removeFromDom: removeFromDom,\n              traderName: traderName,\n              setTraderName: setTraderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 89\n            }, this),\n            trade: /*#__PURE__*/_jsxDEV(TraderTable, {\n              traderName: traderName,\n              setTraderName: setTraderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 192\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this),\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(UpdateTrader, {\n            traderName: traderName,\n            setTraderName: setTraderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }, this),\n          path: \"/traders/:_id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(TraderForm, {\n            traderName: traderName,\n            setTraderName: setTraderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }, this),\n          path: \"/traders/create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"rDjS39cRUBWjlXDOlSoLvVIp5Go=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/github/MinecraftTrades/client/src/App.js"],"names":["React","useState","axios","BrowserRouter","Routes","Route","NavBar","TraderTable","HomePage","TraderForm","UpdateTrader","App","props","traderName","setTraderName","console","log","removeFromDom","traderId","filter","trader","_id","useEffect","get","then","res","data","catch","err"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;;AACA,OAAOC,UAAP,MAAsB,yBAAtB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;AACA;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C,CADmB,CAEnB;;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AACA,QAAMI,aAAa,GAAGC,QAAQ,IAAI;AACjCJ,IAAAA,aAAa,CAACD,UAAU,CAACM,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACC,GAAP,IAAcH,QAA1C,CAAD,CAAb;AACA,GAFD;;AAGAI,EAAAA,SAAS,CAAC,MAAK;AACRpB,IAAAA,KAAK,CAACqB,GAAN,CAAU,0CAAV,EACCC,IADD,CACOC,GAAD,IAAO;AACT;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;AACAZ,MAAAA,aAAa,CAACW,GAAG,CAACC,IAAL,CAAb;AACH,KALD,EAMCC,KAND,CAMQC,GAAD,IAAOb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CANd;AAQH,GATK,EASJ,EATI,CAAT;AAUA,sBACC,QAAC,aAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAKC,QAAC,MAAD;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,UAAU,EAAEf,UAAtB;AAAkC,YAAA,aAAa,EAAEC,aAAjD;AAAgE,YAAA,GAAG,eAAE,QAAC,MAAD;AAAQ,cAAA,aAAa,EAAEG,aAAvB;AAAsC,cAAA,UAAU,EAAEJ,UAAlD;AAA8D,cAAA,aAAa,EAAEC;AAA7E;AAAA;AAAA;AAAA;AAAA,oBAArE;AAAqK,YAAA,KAAK,eAAE,QAAC,WAAD;AAAa,cAAA,UAAU,EAAED,UAAzB;AAAqC,cAAA,aAAa,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA;AAA5K;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAuQ,UAAA,IAAI,EAAC;AAA5Q;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA,QAAC,KAAD;AAAO,UAAA,OAAO,eAAE,QAAC,YAAD;AAAc,YAAA,UAAU,EAAED,UAA1B;AAAsC,YAAA,aAAa,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAwF,UAAA,IAAI,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,KAAD;AAAO,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,UAAU,EAAED,UAAxB;AAAoC,YAAA,aAAa,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAqF,UAAA,IAAI,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA;;GAnCQH,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TraderTable from \"./components/TraderTable\";\r\nimport HomePage from \"./components/HomePage\";\r\n// import TableInput from \"./components/TableData\";\r\nimport TraderForm from'./components/TraderForm';\r\n// import DisplayOneTrader from './components/DisplayOneTrader';\r\nimport UpdateTrader from './components/UpdateTrader';\r\n//  tableInput was to insert existing data to trader db for simpler calling and editing later.\r\n// table input is not used as main app functions.\r\n\r\nfunction App(props) {\r\n\tconst [traderName, setTraderName] = useState();\r\n\t// const [theTraderId, setTheTraderId] = useState();\r\n\tconsole.log(\"app.js logging traderName State. value is...\")\r\n\tconsole.log(traderName);\r\n\tconst removeFromDom = traderId => {\r\n\t\tsetTraderName(traderName.filter(trader => trader._id != traderId));\r\n\t}\r\n\tuseEffect(() =>{\r\n        axios.get('http://localhost:8000/api/traders/getAll')\r\n        .then((res)=>{\r\n            // console.log(res);\r\n            console.log(res.data);\r\n            setTraderName(res.data);\r\n        })\r\n        .catch((err)=>console.log(err))\r\n        \r\n    },[])\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* Playing with data set to integrate it into database quickly --Thomas  */}\r\n\t\t\t{/* <TableInput />   */}\r\n\t\t\t\r\n\r\n\t\t\t<Routes>\r\n\t\t\t<Route element={<HomePage traderName={traderName} setTraderName={setTraderName} nav={<NavBar removeFromDom={removeFromDom} traderName={traderName} setTraderName={setTraderName} />} trade={<TraderTable traderName={traderName} setTraderName={setTraderName} />} />} path=\"/\" />\r\n\t\t\t{/* <Route element={<TraderTable  />} path=\"/api/traders/:id\"/> */}\r\n\t\t\t<Route element={<UpdateTrader traderName={traderName} setTraderName={setTraderName} />} path=\"/traders/:_id\" />\r\n\t\t\t<Route element={<TraderForm traderName={traderName} setTraderName={setTraderName}/>} path=\"/traders/create\" />\r\n\r\n\t\t\t</Routes>\r\n\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
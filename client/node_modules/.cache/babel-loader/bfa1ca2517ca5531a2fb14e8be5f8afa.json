{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\MinecraftTrades\\\\client\\\\src\\\\components\\\\TraderTable.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom'; // import npc from \"../data/trader.json\";\n// this is the trader table, it must hold an image related to the exact trader being displayed.\n// modularize the table with a loop and variables. this table will be reused.\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\n// pass traderName through props to grab all data from database.\n// this table will be scrollable if it overflows beyond the bottom of the screen.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TraderTable = props => {\n  //just a comment\n  const {\n    traderName\n  } = props;\n  const DisplayData = traderName === null || traderName === void 0 ? void 0 : traderName.map((trader, index) => {\n    /*#__PURE__*/\n    _jsxDEV(\"npcItem\", {\n      value: trader\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [trader.trades.wants.map((item, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: item\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              src: item.itemImageUrl,\n              children: item.itemName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"BR-Text\",\n              children: item.itemCount\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 10\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this);\n      }), trader.trades.gives.map((item, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: item\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"// \", /*#__PURE__*/_jsxDEV(\"itemList\", {\n            value: item\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 12\n          }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              src: item.itemImageUrl,\n              children: item.itemName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"BR-Text\",\n              children: item.itemCount\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this);\n      })]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades centerTable\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tablewrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"wants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"gives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), traderName ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: DisplayData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this); // return (\n  //     <div className=\"trades\">\n  //         <div className=\"tablewrapper\">\n  //         <table >\n  //             <tbody>\n  //                 <tr>\n  //                     <th className=\"tradername\">\n  //                         Currency Exchange\n  //                     </th>\n  //                     <th>\n  //                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\n  //                         </img>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th className=\"tradername\">Wants</th>\n  //                     <th className=\"tradername\">Gives</th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Diamond mc  centered\" title=\"diamond\">\n  //                             <div className=\"BR-Text\">\n  //                                 3\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //             </tbody>\n  //         </table>\n  //         </div>\n  //     </div>\n  // );\n};\n\n_c = TraderTable;\nexport default TraderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TraderTable\");","map":{"version":3,"sources":["E:/github/MinecraftTrades/client/src/components/TraderTable.js"],"names":["React","useEffect","useState","axios","useParams","TraderTable","props","traderName","DisplayData","map","trader","index","toString","trades","wants","item","itemImageUrl","itemName","itemCount","gives"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\n// import npc from \"../data/trader.json\";\r\n\r\n// this is the trader table, it must hold an image related to the exact trader being displayed.\r\n// modularize the table with a loop and variables. this table will be reused.\r\n\r\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\r\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\r\n// pass traderName through props to grab all data from database.\r\n// this table will be scrollable if it overflows beyond the bottom of the screen.\r\nconst TraderTable = (props) => {\r\n\t//just a comment\r\n\tconst {traderName} = props;\r\n\tconst DisplayData = traderName?.map((trader, index) => {\r\n\t\t<npcItem key={index.toString()} value={trader} />;\r\n\t\treturn (\r\n\t\t\t<tr key={index}>\r\n\r\n{/* cannot map an object, only array. */}\r\n\r\n\t\t\t\t{trader.trades.wants.map((item, index) => {\r\n\t\t\t\t\t<npcWant key={index.toString()} value={item} />;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<td key={index}>\r\n\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} src={item.itemImageUrl}>{item.itemName}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"BR-Text\">{item.itemCount}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t{trader.trades.gives.map((item, index) => {\r\n\t\t\t\t\t<npcWant key={index.toString()} value={item} />;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<td key={index}>\r\n\t\t\t\t\t\t\t{/* {trades.gives.map((item, index) => { */}\r\n\t\t\t\t\t\t\t\t// <itemList key={index.toString()} value={item} />;\r\n\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} src={item.itemImageUrl}>{item.itemName}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"BR-Text\">{item.itemCount}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"trades centerTable\">\r\n\t\t\t<div className=\"tablewrapper\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>wants</th>\r\n\t\t\t\t\t\t\t<th>gives</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t{traderName?\r\n\t\t\t\t\t<tbody>{DisplayData}</tbody>\r\n\t\t\t\t\t:null}\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n\r\n\t// return (\r\n\t//     <div className=\"trades\">\r\n\t//         <div className=\"tablewrapper\">\r\n\t//         <table >\r\n\t//             <tbody>\r\n\t//                 <tr>\r\n\r\n\t//                     <th className=\"tradername\">\r\n\t//                         Currency Exchange\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\r\n\t//                         </img>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th className=\"tradername\">Wants</th>\r\n\t//                     <th className=\"tradername\">Gives</th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Diamond mc  centered\" title=\"diamond\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 3\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\r\n\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 10\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Et mc  centered\" title=\"event token\">\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Et mc  centered\" title=\"event token\">\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 10\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//             </tbody>\r\n\t//         </table>\r\n\t//         </div>\r\n\t//     </div>\r\n\t// );\r\n};\r\n\r\nexport default TraderTable;\r\n"]},"metadata":{},"sourceType":"module"}
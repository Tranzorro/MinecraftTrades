{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\MinecraftTrades\\\\client\\\\src\\\\components\\\\TraderTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport npc from '../data/trader.json'; // this is the trader table, it must hold an image related to the exact trader being displayed.\n// modularize the table with a loop and variables. this table will be reused.\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\n// pass traderName through props to grab all data from database.\n// this table will be scrollable if it overflows beyond the bottom of the screen.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TraderTable = props => {\n  const DisplayData = npc.map(info => {\n    /*#__PURE__*/\n    _jsxDEV(\"npcItem\", {\n      value: info.id\n    }, info.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [info.trades.map(trades => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: trades.id\n        }, trades.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: trades.wants.map(item => {\n            /*#__PURE__*/\n            _jsxDEV(\"itemList\", {\n              value: item.id\n            }, item.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 41\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                src: item.itemImageUrl,\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"BR-Text\",\n                children: item.itemCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 49\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 45\n            }, this);\n          })\n        }, trades.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 33\n        }, this);\n      }), info.trades.map(trades => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: trades.id\n        }, trades.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: trades.gives.map(item => {\n            /*#__PURE__*/\n            _jsxDEV(\"itemList\", {\n              value: item.id\n            }, item.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 41\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                src: item.itemImageUrl,\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"BR-Text\",\n                children: item.itemCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 49\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 45\n            }, this);\n          })\n        }, trades.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this);\n      })]\n    }, info.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tablewrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"wants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"gives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: DisplayData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this); // return (\n  //     <div className=\"trades\">\n  //         <div className=\"tablewrapper\">\n  //         <table >\n  //             <tbody>\n  //                 <tr>\n  //                     <th className=\"tradername\">\n  //                         Currency Exchange\n  //                     </th>\n  //                     <th>\n  //                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\n  //                         </img>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th className=\"tradername\">Wants</th>\n  //                     <th className=\"tradername\">Gives</th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Diamond mc  centered\" title=\"diamond\">\n  //                             <div className=\"BR-Text\">\n  //                                 3\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //             </tbody>\n  //         </table>\n  //         </div>\n  //     </div>\n  // );\n};\n\n_c = TraderTable;\nexport default TraderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TraderTable\");","map":{"version":3,"sources":["E:/github/MinecraftTrades/client/src/components/TraderTable.js"],"names":["React","useEffect","useState","axios","npc","TraderTable","props","DisplayData","map","info","id","toString","trades","wants","item","itemImageUrl","itemName","itemCount","gives"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from  'react';\r\nimport axios from 'axios';\r\nimport npc from '../data/trader.json';\r\n// this is the trader table, it must hold an image related to the exact trader being displayed.\r\n// modularize the table with a loop and variables. this table will be reused.\r\n\r\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\r\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\r\n// pass traderName through props to grab all data from database.\r\n// this table will be scrollable if it overflows beyond the bottom of the screen.\r\nconst TraderTable = (props) => {\r\n    const DisplayData = npc.map((info)=>{\r\n            <npcItem key = {info.toString()} value={info.id}/>\r\n            return(\r\n                <tr key= {info.id}>\r\n                        {info.trades.map((trades) => {\r\n                            <npcWant key = {trades.toString()} value = {trades.id}/>\r\n                            return(\r\n                                <td key ={trades.id}>\r\n                                    {trades.wants.map((item) => {\r\n                                        <itemList key = {item.toString()} value = {item.id} />\r\n                                        return(\r\n                                            <div key = {item.id}>\r\n                                                <div src = {item.itemImageUrl}>{item.itemName}</div>\r\n                                                <div className= \"BR-Text\">{item.itemCount}</div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </td>\r\n                            )\r\n                        })}\r\n                    \r\n                    {info.trades.map((trades) => {\r\n                            <npcWant key = {trades.toString()} value = {trades.id}/>\r\n                            return(\r\n                                <td key ={trades.id}>\r\n                                    {trades.gives.map((item) => {\r\n                                        <itemList key = {item.toString()} value = {item.id} />\r\n                                        return(\r\n                                            <div key = {item.id}>\r\n                                                <div src = {item.itemImageUrl}>{item.itemName}</div>\r\n                                                <div className= \"BR-Text\">{item.itemCount}</div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </td>\r\n                            )\r\n                        })}\r\n                </tr>\r\n            )\r\n        }\r\n    )\r\n    return(\r\n        <div className=\"trades\">\r\n            <div className=\"tablewrapper\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th>id</th>  */}\r\n                            <th>wants</th>\r\n                            <th>gives</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {DisplayData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    // return (\r\n    //     <div className=\"trades\">\r\n    //         <div className=\"tablewrapper\">\r\n    //         <table >\r\n    //             <tbody>\r\n    //                 <tr>\r\n\r\n    //                     <th className=\"tradername\">\r\n    //                         Currency Exchange\r\n    //                     </th>\r\n    //                     <th>\r\n    //                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\r\n    //                         </img>\r\n    //                     </th>\r\n    //                 </tr>\r\n    //                 <tr>\r\n    //                     <th className=\"tradername\">Wants</th>\r\n    //                     <th className=\"tradername\">Gives</th>\r\n    //                 </tr>\r\n    //                 <tr>\r\n    //                     <th>\r\n    //                         <div className=\"Diamond mc  centered\" title=\"diamond\">\r\n    //                             <div className=\"BR-Text\">\r\n    //                                 3\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     </th>\r\n    //                     <th>\r\n    //                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\r\n\r\n    //                         </div>\r\n    //                     </th>\r\n    //                 </tr>\r\n    //                 <tr>\r\n    //                     <th>\r\n    //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n    //                             <div className=\"BR-Text\">\r\n    //                                 10\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     </th>\r\n    //                     <th>\r\n    //                         <div className=\"Et mc  centered\" title=\"event token\">\r\n    //                         </div>\r\n    //                     </th>\r\n    //                 </tr>\r\n    //                 <tr>\r\n    //                     <th>\r\n    //                         <div className=\"Et mc  centered\" title=\"event token\">\r\n    //                         </div>\r\n    //                     </th>\r\n    //                     <th>\r\n    //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n    //                             <div className=\"BR-Text\">\r\n    //                                 10\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     </th>\r\n    //                 </tr>\r\n    //             </tbody>\r\n    //         </table>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default TraderTable;\r\n"]},"metadata":{},"sourceType":"module"}
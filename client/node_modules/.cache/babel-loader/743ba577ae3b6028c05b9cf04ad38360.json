{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\MinecraftTrades\\\\client\\\\src\\\\components\\\\TraderTable.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport npc from \"../data/trader.json\"; // this is the trader table, it must hold an image related to the exact trader being displayed.\n// modularize the table with a loop and variables. this table will be reused.\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\n// pass traderName through props to grab all data from database.\n// this table will be scrollable if it overflows beyond the bottom of the screen.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TraderTable = props => {\n  //just a comment\n  const DisplayData = npc.map((info, index) => {\n    /*#__PURE__*/\n    _jsxDEV(\"npcItem\", {\n      value: info.id\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [info.trades.map((trades, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: trades.id\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: trades.wants.map((item, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"itemList\", {\n              value: item.id\n            }, index.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                src: item.itemImageUrl,\n                children: item.itemName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"BR-Text\",\n                children: item.itemCount\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 11\n              }, this)]\n            }, index.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 10\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this);\n      }), info.trades.map((trades, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"npcWant\", {\n          value: trades.id\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: trades.gives.map((item, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"itemList\", {\n              value: item.id\n            }, index.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                src: item.itemImageUrl,\n                children: item.itemName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"BR-Text\",\n                children: item.itemCount\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 10\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this);\n      })]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades centerTable\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tablewrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"wants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"gives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: DisplayData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this); // return (\n  //     <div className=\"trades\">\n  //         <div className=\"tablewrapper\">\n  //         <table >\n  //             <tbody>\n  //                 <tr>\n  //                     <th className=\"tradername\">\n  //                         Currency Exchange\n  //                     </th>\n  //                     <th>\n  //                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\n  //                         </img>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th className=\"tradername\">Wants</th>\n  //                     <th className=\"tradername\">Gives</th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Diamond mc  centered\" title=\"diamond\">\n  //                             <div className=\"BR-Text\">\n  //                                 3\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //                 <tr>\n  //                     <th>\n  //                         <div className=\"Et mc  centered\" title=\"event token\">\n  //                         </div>\n  //                     </th>\n  //                     <th>\n  //                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\n  //                             <div className=\"BR-Text\">\n  //                                 10\n  //                             </div>\n  //                         </div>\n  //                     </th>\n  //                 </tr>\n  //             </tbody>\n  //         </table>\n  //         </div>\n  //     </div>\n  // );\n};\n\n_c = TraderTable;\nexport default TraderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TraderTable\");","map":{"version":3,"sources":["E:/github/MinecraftTrades/client/src/components/TraderTable.js"],"names":["React","useEffect","useState","axios","useParams","npc","TraderTable","props","DisplayData","map","info","index","id","toString","trades","wants","item","itemImageUrl","itemName","itemCount","gives"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC9B;AACA,QAAMC,WAAW,GAAGH,GAAG,CAACI,GAAJ,CAAQ,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C;AAAA;AAAgC,MAAA,KAAK,EAAED,IAAI,CAACE;AAA5C,OAAcD,KAAK,CAACE,QAAN,EAAd;AAAA;AAAA;AAAA;AAAA;;AACA,wBACC;AAAA,iBACEH,IAAI,CAACI,MAAL,CAAYL,GAAZ,CAAgB,CAACK,MAAD,EAASH,KAAT,KAAmB;AACnC;AAAA;AAAgC,UAAA,KAAK,EAAEG,MAAM,CAACF;AAA9C,WAAcD,KAAK,CAACE,QAAN,EAAd;AAAA;AAAA;AAAA;AAAA;;AACA,4BACC;AAAA,oBACEC,MAAM,CAACC,KAAP,CAAaN,GAAb,CAAiB,CAACO,IAAD,EAAOL,KAAP,KAAiB;AAClC;AAAA;AAAiC,cAAA,KAAK,EAAEK,IAAI,CAACJ;AAA7C,eAAeD,KAAK,CAACE,QAAN,EAAf;AAAA;AAAA;AAAA;AAAA;;AACA,gCACC;AAAA,sCACC;AAAiB,gBAAA,GAAG,EAAEG,IAAI,CAACC,YAA3B;AAAA,0BAA0CD,IAAI,CAACE;AAA/C,iBAAUP,KAAV;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAiB,gBAAA,SAAS,EAAC,SAA3B;AAAA,0BAAsCK,IAAI,CAACG;AAA3C,iBAAUR,KAAV;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA,eAAUA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,oBADD;AAMA,WARA;AADF,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AAaA,OAfA,CADF,EAkBED,IAAI,CAACI,MAAL,CAAYL,GAAZ,CAAgB,CAACK,MAAD,EAASH,KAAT,KAAmB;AACnC;AAAA;AAAgC,UAAA,KAAK,EAAEG,MAAM,CAACF;AAA9C,WAAcD,KAAK,CAACE,QAAN,EAAd;AAAA;AAAA;AAAA;AAAA;;AACA,4BACC;AAAA,oBACEC,MAAM,CAACM,KAAP,CAAaX,GAAb,CAAiB,CAACO,IAAD,EAAOL,KAAP,KAAiB;AAClC;AAAA;AAAiC,cAAA,KAAK,EAAEK,IAAI,CAACJ;AAA7C,eAAeD,KAAK,CAACE,QAAN,EAAf;AAAA;AAAA;AAAA;AAAA;;AACA,gCACC;AAAA,sCACC;AAAiB,gBAAA,GAAG,EAAEG,IAAI,CAACC,YAA3B;AAAA,0BAA0CD,IAAI,CAACE;AAA/C,iBAAUP,KAAV;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAiB,gBAAA,SAAS,EAAC,SAA3B;AAAA,0BAAsCK,IAAI,CAACG;AAA3C,iBAAUR,KAAV;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,oBADD;AAMA,WARA;AADF,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AAaA,OAfA,CAlBF;AAAA,OAASA,KAAT;AAAA;AAAA;AAAA;AAAA,YADD;AAqCA,GAvCmB,CAApB;AAwCA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACC;AAAA,gCACC;AAAA,iCACC;AAAA,oCAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC;AAAA,oBAAQH;AAAR;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,CA1C8B,CA2D9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3HD;;KAAMF,W;AA6HN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\nimport npc from \"../data/trader.json\";\r\n\r\n// this is the trader table, it must hold an image related to the exact trader being displayed.\r\n// modularize the table with a loop and variables. this table will be reused.\r\n\r\n// elements of the table: 1 image 1 name 1 column of wants 1 column of gives\r\n// to access the info, use a variable to grab all related data based on navbar variable \"traderName\"\r\n// pass traderName through props to grab all data from database.\r\n// this table will be scrollable if it overflows beyond the bottom of the screen.\r\nconst TraderTable = (props) => {\r\n\t//just a comment\r\n\tconst DisplayData = npc.map((info, index) => {\r\n\t\t<npcItem key={index.toString()} value={info.id} />;\r\n\t\treturn (\r\n\t\t\t<tr key={index}>\r\n\t\t\t\t{info.trades.map((trades, index) => {\r\n\t\t\t\t\t<npcWant key={index.toString()} value={trades.id} />;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<td key={index}>\r\n\t\t\t\t\t\t\t{trades.wants.map((item, index) => {\r\n\t\t\t\t\t\t\t\t<itemList key={index.toString()} value={item.id} />;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index.id}>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} src={item.itemImageUrl}>{item.itemName}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"BR-Text\">{item.itemCount}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t{info.trades.map((trades, index) => {\r\n\t\t\t\t\t<npcWant key={index.toString()} value={trades.id} />;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<td key={index}>\r\n\t\t\t\t\t\t\t{trades.gives.map((item, index) => {\r\n\t\t\t\t\t\t\t\t<itemList key={index.toString()} value={item.id} />;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} src={item.itemImageUrl}>{item.itemName}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"BR-Text\">{item.itemCount}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"trades centerTable\">\r\n\t\t\t<div className=\"tablewrapper\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t{/* <th>id</th>  */}\r\n\t\t\t\t\t\t\t<th>wants</th>\r\n\t\t\t\t\t\t\t<th>gives</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>{DisplayData}</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\t// return (\r\n\t//     <div className=\"trades\">\r\n\t//         <div className=\"tablewrapper\">\r\n\t//         <table >\r\n\t//             <tbody>\r\n\t//                 <tr>\r\n\r\n\t//                     <th className=\"tradername\">\r\n\t//                         Currency Exchange\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <img src=\"/currency_exchange.png\" className=\"portrait\" title=\"Give me diamonds, and I'll give you something... special.\" alt=\"currency exchange\">\r\n\t//                         </img>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th className=\"tradername\">Wants</th>\r\n\t//                     <th className=\"tradername\">Gives</th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Diamond mc  centered\" title=\"diamond\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 3\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\" >\r\n\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 10\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Et mc  centered\" title=\"event token\">\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//                 <tr>\r\n\t//                     <th>\r\n\t//                         <div className=\"Et mc  centered\" title=\"event token\">\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                     <th>\r\n\t//                         <div className=\"Qn mc  centered\" title=\"quest nugget\">\r\n\t//                             <div className=\"BR-Text\">\r\n\t//                                 10\r\n\t//                             </div>\r\n\t//                         </div>\r\n\t//                     </th>\r\n\t//                 </tr>\r\n\t//             </tbody>\r\n\t//         </table>\r\n\t//         </div>\r\n\t//     </div>\r\n\t// );\r\n};\r\n\r\nexport default TraderTable;\r\n"]},"metadata":{},"sourceType":"module"}